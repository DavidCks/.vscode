{
    "Yew struct component with message enum and styling": {
        "prefix": "sysc",
        "body": [
			"use rusty_css::*;",
            "use yew::prelude::*;",
			"use bevy_reflect::{ Reflect };",
			"use append_to_string::*;",
            "",
			"#[allow(non_snake_case)]",
			"#[derive(Reflect)]",
			"struct ${1}Style {",
			"    position: String,",
			"}",
			"",
			"impl Style for ${1}Style {",
			"    fn create() -> Self {",
			"        append_to_string!(",
			"            Self {",
			"                position: \"initial\",",
            "            }",
			"        )",
			"    }",
			"}",
            "",
            "pub struct ${1} {",
            "   style: ${1}Style",
            "}",
            "",
            "pub enum Msg {",
            "}",
            "",
            "impl Component for ${1} {",
            "    type Message = Msg;",
            "    type Properties = ();",
            "",
            "    fn create(ctx: &Context<Self>) -> Self {",
            "        Self {",
            "            style: ${1}Style::create(),",
            "        }",
            "    }",
            "",
            "    fn view(&self, ctx: &Context<Self>) -> Html {",
            "        html! {",
            "            <div style={ self.style.inline() } >",
            "                ",
            "            </div>",
            "        }",
            "    }",
            "}"
        ],
        "description": "Yew struct component with a message enum and styling"
    },
    "Yew struct component with message enum, styling and children": {
        "prefix": "syscwc",
        "body": [
			"use rusty_css::*;",
            "use yew::prelude::*;",
			"use bevy_reflect::{ Reflect };",
			"use append_to_string::*;",
            "",
			"#[allow(non_snake_case)]",
			"#[derive(Reflect)]",
			"struct ${1}Style {",
			"    position: String,",
			"}",
			"",
			"impl Style for ${1}Style {",
			"    fn create() -> Self {",
			"        append_to_string!(",
			"            Self {",
			"                position: \"initial\",",
            "            }",
			"        )",
			"    }",
			"}",
            "",
            "#[derive(Properties, PartialEq)]",
            "pub struct ${1}Props {",
            "    #[prop_or_default]",
            "    pub children: Children,",
            "}",
            "",
            "pub struct ${1} {",
            "   style: ${1}Style",
            "}",
            "",
            "pub enum Msg {",
            "}",
            "",
            "impl Component for ${1} {",
            "    type Message = Msg;",
            "    type Properties = ${1}Props;",
            "",
            "    fn create(ctx: &Context<Self>) -> Self {",
            "        Self {",
            "            style: ${1}Style::create(),",
            "        }",
            "    }",
            "",
            "    fn view(&self, ctx: &Context<Self>) -> Html {",
            "        html! {",
            "            <div style={ self.style.inline() } >",
            "                { for ctx.props().children.iter() }",
            "            </div>",
            "            ",
            "        }",
            "    }",
            "}"
        ],
        "description": "Yew struct component with message enum, styling and children"
    },
	"ysc": {
        "prefix": "ysc",
        "body": [
            "use yew::prelude::*;",
            "",
            "pub struct ${1};",
            "",
            "impl Component for ${1} {",
            "    type Message = Msg;",
            "    type Properties = ();",
            "",
            "    fn create(ctx: &Context<Self>) -> Self {",
            "        Self",
            "    }",
            "",
            "    fn view(&self, ctx: &Context<Self>) -> Html {",
            "        html! {",
            "            ",
            "        }",
            "    }",
            "}"
        ],
        "description": "Yew struct component with a message enum"
    },
    "ysprops": {
        "prefix": "ysprops",
        "body": [
        "#[derive(Properties, PartialEq)]",
        "pub struct Props {",
        "    #[prop_or_default]",
        "    pub prop: bool,",
        "}"
        ],
        "description": "Yew props struct"
    },
}